{"version":3,"file":"static/js/34.e58c82d2.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__ayUrs\",\"posts\":\"MyPosts_posts__A-UrO\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__BfTuB\"};","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return <div className={classes.item}>\r\n        {props.message}\r\n        <img src='https://img.freepik.com/premium-vector/woman-avatars-with-different-emotions-girl-with-spring-or-summer-flowers-and-a-wreath-in-black-hair_427567-1481.jpg' />\r\n        <div>\r\n            <span>like</span> {props.likesCount}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field } from 'redux-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postElements = props.postData.map(post => <Post message={post.message} likesCount={post.likesCount} />);\r\n\r\n    let addNewPost = (newPostValue) => {\r\n        props.addPost(newPostValue.profileAddNewPost);\r\n    };\r\n\r\n    return <div className={classes.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <div>\r\n            <AddNewPostRormRedux onSubmit={addNewPost} />\r\n        </div>\r\n        <div className={classes.posts}>\r\n            {postElements}\r\n        </div>\r\n    </div>\r\n}\r\n)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='profileAddNewPost' validate={[required, maxLengthCreator(10)]}></Field>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostRormRedux = reduxForm({ form: 'addNewPostForm' })(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n  }\r\n  \r\n  let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      addPost: (newPostValue) => {\r\n        dispatch(addPostActionCreator(newPostValue));\r\n      }\r\n    }\r\n  }\r\n  \r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"descriptionDblock\":\"ProfileInfo_descriptionDblock__sBexp\"};","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({ editMode: true })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({ editMode: false });\r\n        this.props.updateUserStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({ status: e.currentTarget.value });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({ status: this.props.status });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || 'No status'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} \r\n                        autoFocus={true} \r\n                        onBlur={this.deactivateEditMode.bind(this)} \r\n                        value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)}, \r\n        [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || 'No status'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input \r\n                    onChange={onStatusChange} \r\n                    autoFocus={true} \r\n                    onBlur={deactivateEditMode} \r\n                    value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({userProfile, status, updateUserStatus}) => {\r\n    if (!userProfile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div>\r\n        {/* <div>\r\n            <img src='https://media.tproger.ru/uploads/2021/02/iconfinder_reactjs_javascript_library_atom_atomic_react_5362908-cover.png' />\r\n        </div> */}\r\n        <div className={classes.descriptionDblock}>\r\n            <img src={userProfile.photos.large}></img>\r\n            <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    return <div>\r\n        <ProfileInfo userProfile={props.userProfile} status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile.jsx';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from '../../redux/profile-reducer.jsx';\r\nimport { useParams } from 'react-router-dom';\r\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect.jsx';\r\nimport { compose } from 'redux';\r\n\r\nexport function withRouter(Children) {\r\n    return (props) => {\r\n        const match = { params: useParams() };\r\n        return <Children {...props} match={match} />\r\n    }\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} userProfile={this.props.userProfile} status={this.props.status} updateUserStatus={this.props.updateUserStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    userProfile: state.profilePage.userProfile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n  ) (ProfileContainer);"],"names":["props","className","classes","message","src","likesCount","MyPosts","React","postElements","postData","map","post","AddNewPostRormRedux","onSubmit","newPostValue","addPost","profileAddNewPost","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","maxLengthCreator","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateUserStatus","userProfile","photos","large","Preloader","withRouter","Children","match","params","useParams","ProfileContainer","userId","this","authorizedUserId","history","push","getUserProfile","getUserStatus","compose","auth","isAuth","WithAuthRedirect"],"sourceRoot":""}